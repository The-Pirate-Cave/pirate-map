import { ConnectButton } from '@rainbow-me/rainbowkit';
import mapboxgl from 'mapbox-gl';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useRef, useState } from 'react';
import Switch from 'react-ios-switch';
import { useGeo, useGeoWatch } from 'use-geo';
import { useAccount, useBalance } from 'wagmi';

import Deposit from '@/components/Deposit';
import Withdraw from '@/components/Withdraw';

import useMap from '../components/Map';

const Home: NextPage = () => {
  const { position, watching, watch, unwatch } =
    useGeoWatch(/* immediate flag (boolean) or PositionOptions object */);
  const { createMap } = useMap();
  const ref = useRef(null);
  const [geoLocations, setGeoLocations] = useState([]);
  const [amount, setAmount] = useState(0);
  const { longitude, latitude } = position?.coords || {};
  const { address } = useAccount();
  const router = useRouter();
  const { data: balance } = useBalance({
    addressOrName: address,
  });

  useEffect(() => {
    if (ref.current && position) {
      createMap(ref.current, { longitude, latitude }).then((map: any) => {
        map.addControl(new mapboxgl.NavigationControl());

        const marker1 = new mapboxgl.Marker()
          .setLngLat([longitude, latitude])
          .addTo(map);

        map.addControl(
          new mapboxgl.AttributionControl({
            customAttribution: 'Map design by me',
          })
        );
      });
    }
  }, [ref, position]);

  return (
    <>
      <Head>
        <title>Pirate Cave</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="h-screen md:flex">
        <div className="h-64 md:h-full md:w-1/2">
          <div ref={ref} className="h-full w-full" id="map-render">
            Loading...
          </div>
        </div>
        <div className="z-10 py-5 px-4 md:w-1/2 md:px-10">
          <div className="mb-10">
            <ConnectButton />
          </div>
          <article className="mb-20 flex">
            <article className="">
              <div className="mb-6">
                <>
                  <div className="mb-2 flex align-middle">
                    <h4 className={'inline font-bold'}>Live Watching: </h4>
                    <Switch
                      className={'mx-2'}
                      checked={watching}
                      onChange={() => {
                        watching ? unwatch() : watch();
                      }}
                    />
                  </div>
                  <div className={'mb-5'}>
                    <span>
                      <b>latitude:</b> {latitude}
                    </span>{' '}
                    <span>
                      <b>longitude:</b> {longitude}
                    </span>
                  </div>
                  <div>
                    <button
                      disabled={!position}
                      className={
                        'flex rounded-xl border-2 border-indigo-500 bg-gradient-to-b from-sky-500 to-indigo-500 p-2 px-4 align-middle text-white'
                      }
                      onClick={() => {
                        setGeoLocations([
                          ...geoLocations,
                          { longitude, latitude },
                        ]);
                      }}
                    >
                      <img
                        src={`${router.basePath}/assets/icons/ship.png`}
                        className={'mr-3 inline w-6'}
                        alt=""
                      />
                      Save coords for deposit
                    </button>
                  </div>
                  <hr className={`my-5`} />
                </>
                {geoLocations.map((geoLocation, index) => (
                  <div key={index} className={'my-1 flex align-middle'}>
                    <input
                      disabled={true}
                      onChange={() => {}}
                      className={
                        'w-[220px] rounded-xl border-2 border-gray-400 bg-gray-100 p-2 text-black disabled:bg-gray-300'
                      }
                      type="text"
                      value={[geoLocation.latitude, geoLocation.longitude].join(
                        ', '
                      )}
                      placeholder={'Location'}
                    />
                    <button
                      onClick={() => {
                        setGeoLocations([
                          ...geoLocations.slice(0, index),
                          ...geoLocations.slice(index + 1, geoLocations.length),
                        ]);
                      }}
                      className={
                        'bg-gray mx-2 flex rounded-xl border-2 bg-red-600 py-2 px-3 align-middle text-white'
                      }
                    >
                      Remove
                      <img
                        src={`${router.basePath}/assets/icons/remove.webp`}
                        alt=""
                        className="ml-3 w-5"
                      />
                    </button>
                  </div>
                ))}
              </div>
              <div className="mb-5">
                <label>
                  <b>Amount to deposit (ETH):</b>
                  <div className={'mt-5'}>
                    <input
                      className={'border-2 p-2 text-black'}
                      type="number"
                      onChange={(event) => {
                        setAmount(event.target.value);
                      }}
                    />
                  </div>
                </label>
              </div>
              <div className="mb-5">
                <Deposit amount={amount} geoLocations={geoLocations} />
              </div>
              <div className="mb-5">
                <Withdraw amount={amount} geoLocations={geoLocations} />
              </div>
            </article>
          </article>
        </div>
      </section>

      {/* <footer> */}
      {/*  <a href="https://rainbow.me" target="_blank" rel="noopener noreferrer"> */}
      {/*    Made with ‚ù§Ô∏è by your frens at üåà */}
      {/*  </a> */}
      {/* </footer> */}
    </>
  );
};

export default Home;
